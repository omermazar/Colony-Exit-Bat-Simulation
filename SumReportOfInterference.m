function [FlightInterferceSummary] = SumReportOfInterference(BAT, NumberOfBats, NumOfPreys, AllParams, varargin)

NofInputs = nargin;
if NofInputs == 5
    AnalyzeTypeFlag = varargin{1};
else
    AnalyzeTypeFlag = 'OffLine';
end % if NofInputs ==4


Singnal2IntRatio = -3;% to add as input


FlightInterferceSummary.NumberOfBats = NumberOfBats ;
FlightInterferceSummary.NumOfPreys= NumOfPreys;

%%% VectorInit
BatNumVec = zeros(1,NumberOfBats);
NumberOfCatches = BatNumVec;
NumberOfPulses = BatNumVec;
NumberOfDetections = BatNumVec;
NumberOfInterfernces = BatNumVec;
DetectionWhileSearching = BatNumVec;
InterferfenceWhileSearching = BatNumVec;
DetectionWhileApproaching = BatNumVec;
InterferfenceWhileApproaching = BatNumVec;
DetectionWhileObsManuevering = BatNumVec;
InterferfenceWhileObsManuevering = BatNumVec;
NumberOfPulsesTryingToHunt = BatNumVec;
NumberOfHuntedPreyInterferred = BatNumVec;
InterfererToDetectedHuntedPreyRatio = BatNumVec;
NumOfSearchStages = BatNumVec;
NumberOfSuccesulSearchStages = BatNumVec;
NumberOfJammedSearchStages = BatNumVec;
NumOfApproachStages = BatNumVec;
NumberOfSuccesulApproachStages = BatNumVec;
NumberOfJammedApproachStages = BatNumVec;
NumberOfInreferencesFromEchos = BatNumVec;
NumberOfInreferencesFromDirectCalls = BatNumVec;
NumberOfInreferencesFromMasking = BatNumVec;
NumberOfPreyCluttered = BatNumVec;
% FlightInterferceSummary.EachBatSumarry(NumberOfBats) = struct('BatNum',0, 'TotalSearchingDetection',0, 'TotalSearchingInterference',0, ...
%     'TotalApproachingDetection',0, 'TotalApproachingInterference',0, 'TotalObsManDetection',0, 'TotalObsManInterference',0);


switch AnalyzeTypeFlag
    case 'Offline'
        %%
        for BatNum = 1:NumberOfBats
            %%% Summary of each bat

            BatNumVec(BatNum) = BatNum;

            NumberOfCatches(BatNum) = length(BAT(BatNum).CatchPreyTimes);
            DetectionWhileSearching(BatNum) = BAT(BatNum).InterReportStrct.TotalDetectionWhileSearching;
            InterferfenceWhileSearching(BatNum) = BAT(BatNum).InterReportStrct.TotaInterferfenceWhileSearching;

            NumberOfPulses(BatNum) = BAT(BatNum).InterReportStrct.TotalNumberOfPulses;
            NumberOfDetections(BatNum) = BAT(BatNum).InterReportStrct.TotalNumberOfDetections;
            NumberOfInterfernces(BatNum) = BAT(BatNum).InterReportStrct.TotalInterference;

            DetectionWhileApproaching(BatNum) = BAT(BatNum).InterReportStrct.TotalDetectionWhileApproaching;
            InterferfenceWhileApproaching(BatNum) = BAT(BatNum).InterReportStrct.TotaInterferfenceWhileApproaching;

            DetectionWhileObsManuevering(BatNum) = BAT(BatNum).InterReportStrct.TotalDetectionWhileObsManuevering;
            InterferfenceWhileObsManuevering(BatNum) =  BAT(BatNum).InterReportStrct.TotaInterferfenceWhileObsManuevering;

            NumberOfPulsesTryingToHunt(BatNum) = BAT(BatNum).InterReportStrct.NumberOfPulsesTryingToHunt;
            NumberOfHuntedPreyInterferred(BatNum) = BAT(BatNum).InterReportStrct.NumberOfHuntedPreyInterferred;
            InterfererToDetectedHuntedPreyRatio(BatNum) = NumberOfHuntedPreyInterferred(BatNum) / NumberOfPulsesTryingToHunt(BatNum);

            NumOfSearchStages(BatNum) = BAT(BatNum).InterReportStrct.StageStatsStruct.NumOfSearchStages;
            NumberOfSuccesulSearchStages(BatNum) = BAT(BatNum).InterReportStrct.StageStatsStruct.NumberOfSuccesulSearchStages;
            NumberOfJammedSearchStages(BatNum) = BAT(BatNum).InterReportStrct.StageStatsStruct.NumberOfJammedSearchStages;

            NumOfApproachStages(BatNum) = BAT(BatNum).InterReportStrct.StageStatsStruct.NumOfApproachStages;
            NumberOfSuccesulApproachStages(BatNum) = BAT(BatNum).InterReportStrct.StageStatsStruct.NumberOfSuccesulApproachStages;
            NumberOfJammedApproachStages(BatNum) = BAT(BatNum).InterReportStrct.StageStatsStruct.NumberOfJammedApproachStages;

            %%% Interferences Source
            NumberOfInreferencesFromEchos(BatNum) = BAT(BatNum).InterReportStrct.NumberOfEchosInetfrerredFinds;
            NumberOfInreferencesFromDirectCalls(BatNum) = BAT(BatNum).InterReportStrct.NumberOfDirectInetfrerredFinds;
            NumberOfInreferencesFromMasking(BatNum) = BAT(BatNum).InterReportStrct.NumberOfFwdMaskInetfrerredFinds +...
                BAT(BatNum).InterReportStrct.NumberOfBckdMaskInetfrerredFinds;
            % Clutter
            NumberOfPreyCluttered(BatNum) = BAT(BatNum).InterReportStrct.TotalPreyCluttered;

        end %for BatNum = 1:NumberOfBats

        FlightInterferceSummary.SummaryDataVectors = struct(...
            'NumberOfCatches', NumberOfCatches, ...
            'NumberOfPulses' , NumberOfPulses,...
            'NumberOfDetections' , NumberOfDetections, ...
            'NumberOfInterfernces' , NumberOfInterfernces, ...
            'DetectionWhileSearching' , DetectionWhileSearching , ...
            'InterferfenceWhileSearching' , InterferfenceWhileSearching  ,...
            'DetectionWhileApproaching' ,  DetectionWhileApproaching ,...
            'InterferfenceWhileApproaching' , InterferfenceWhileApproaching  , ...
            'DetectionWhileObsManueveringc' ,  DetectionWhileObsManuevering ,...
            'InterferfenceWhileObsManuevering' , InterferfenceWhileObsManuevering   ,...
            'NumberOfPulsesTryingToHunt'  ,  NumberOfPulsesTryingToHunt ,...
            'NumberOfHuntedPreyInterferred'  ,  NumberOfHuntedPreyInterferred  ,...
            'InterfererToDetectedHuntedPreyRatio'  , InterfererToDetectedHuntedPreyRatio  ,...
            'NumberOfSearchStages'  , NumOfSearchStages  ,...
            'NumberOfSuccesulSearchStages'  , NumberOfSuccesulSearchStages  ,...
            'NumberOfJammedSearchStages' , NumberOfJammedSearchStages ,  ...
            'NumOfApproachStages' , NumOfApproachStages ,  ...
            'NumberOfSuccesulApproachStages' , NumberOfSuccesulApproachStages ,  ...
            'NumberOfJammedApproachStages' , NumberOfJammedApproachStages,   ...
            'NumberOfInreferencesFromEchos' , NumberOfInreferencesFromEchos, ...
            'NumberOfInreferencesFromDirectCalls' , NumberOfInreferencesFromDirectCalls, ...
            'NumberOfInreferencesFromMasking' , NumberOfInreferencesFromMasking, ...
            'NumberOfPreyCluttered', NumberOfPreyCluttered ...
            );


        %%% Summary Data for the flight

        FlightInterferceSummary.Statistics = MeanSTDOfStruct( FlightInterferceSummary.SummaryDataVectors );

        FlightInterferceSummary.TotalNumOfCatches = sum(FlightInterferceSummary.SummaryDataVectors.NumberOfCatches);

        FlightInterferceSummary.TotalNumOfPreyDetections = sum(FlightInterferceSummary.SummaryDataVectors.NumberOfDetections) ;

        FlightInterferceSummary.TotaInterferfenceToDetections = ...
            sum(FlightInterferceSummary.SummaryDataVectors.NumberOfInterfernces) ./  sum(FlightInterferceSummary.SummaryDataVectors.NumberOfDetections);

        FlightInterferceSummary.InterferenceToHuntedRatio = ...
            sum(FlightInterferceSummary.SummaryDataVectors.NumberOfHuntedPreyInterferred) ./  sum(FlightInterferceSummary.SummaryDataVectors.NumberOfPulsesTryingToHunt);

        %%% Stage Of Fligt interferred
        FlightInterferceSummary.TotalSearchAndApproachInterfernceRatio = ...
            ( sum(FlightInterferceSummary.SummaryDataVectors.InterferfenceWhileSearching) + ...
            sum(FlightInterferceSummary.SummaryDataVectors.InterferfenceWhileApproaching) ) ...
            ./ ...
            (sum(FlightInterferceSummary.SummaryDataVectors.DetectionWhileSearching) + ...
            sum(FlightInterferceSummary.SummaryDataVectors.DetectionWhileApproaching ) );

        FlightInterferceSummary.JammedToSuccessfulSearchStagesRatio = ...
            sum(FlightInterferceSummary.SummaryDataVectors.NumberOfJammedSearchStages) ./ sum(FlightInterferceSummary.SummaryDataVectors.NumberOfSuccesulSearchStages);

        FlightInterferceSummary.JammedToSuccessfulApproachStagesRatio = ...
            sum(FlightInterferceSummary.SummaryDataVectors.NumberOfJammedApproachStages) ./ sum(FlightInterferceSummary.SummaryDataVectors.NumberOfSuccesulApproachStages);

        %%% Source of interfernce
        FlightInterferceSummary.TotalInterferfenceFromEchos = sum(FlightInterferceSummary.SummaryDataVectors.NumberOfInreferencesFromEchos);
        FlightInterferceSummary.TotalInterferfenceFromDirectCalls = sum(FlightInterferceSummary.SummaryDataVectors.NumberOfInreferencesFromDirectCalls);
        FlightInterferceSummary.TotalInterferfenceFromMasking = sum(FlightInterferceSummary.SummaryDataVectors.NumberOfInreferencesFromMasking);
        %%

    case 'OnLine'
        %%
        BATSIntReport =  [BAT.InterReportStrctOnLine] ;
        FlightInterferceSummary.NumberOfBats = AllParams.SimParams.TotalBatsNumber;
        FlightInterferceSummary.NumOfPreys = AllParams.SimParams.TotalPreysNumber;

        %%% excractintng the ratio of making of the hunted prey in each
        %%% stage
        DesiredStages = { 'Search'  ; 'Approach' ; 'Buzz' };

        for nBat = 1: NumberOfBats
            for kk = 1:numel(DesiredStages)
                % one Bat
                cStage = DesiredStages{kk};
                FieldName =  [cStage '_MaskingRatioToHunted'];
                currStageIndex = strcmp(BAT(nBat).InterReportStrctOnLine.SumStagesStruct.Stage, cStage);
                TempBAT(nBat).StageSummary.(FieldName) = BAT(nBat).InterReportStrctOnLine.SumStagesStruct.MaskingToHuntedRatio(currStageIndex);
            end %  for cStage = DesiredStages
        end % for nBat = 1: NumberOfBats
        TempBatsStages = [TempBAT.StageSummary];

        %%% Changed Jun2022
        FlightInterferceSummary.SummaryDataVectors = struct( ...
            'NumberOfCatches' ,                  [BATSIntReport.NumberOfCatches], ...
            'NumberOfPulses' ,                   [BATSIntReport.TotalNumberOfPulses],...
            'NumberOfDetections' ,               [BATSIntReport.TotalNumberOfDetectionsWithoutInterference], ...
            'NumberOfInterfernces' ,             [BATSIntReport.TotalInterference], ...
            'NumberOfInreferencesFromDirectCalls' , [BATSIntReport.NumberOfDirectInetfrerredFinds], ...
            'NumberOfInreferencesFromMasking',   [BATSIntReport.NumberOfFwdMaskInetfrerredFinds], ...
            'InterferenceToHuntedRatio',         [BATSIntReport.InterferenceToHuntedRatio], ...
            'TotalInterferenceRatio',             [BATSIntReport.TotalInterferenceRatio], ...
            'Reference_PowerDetector_TotalRatio', [BATSIntReport.Reference_Ratio], ...
            'Search_MaskingRatioToHunted',        [TempBatsStages.Search_MaskingRatioToHunted], ....
            'Approach_MaskingRatioToHunted',      [TempBatsStages.Approach_MaskingRatioToHunted],...
            'Buzz_MaskingRatioToHunted',          [TempBatsStages.Buzz_MaskingRatioToHunted], ...
            'MaskingLevelDB_ave',                 [BATSIntReport.MaskingLevelDB_ave], ...
            'MaskingLevelDB_Q90',                 [BATSIntReport.MaskingLevelDB_Q90], ...
            'SIROfDetectedPreys_ave',             [BATSIntReport.SIROfDetectedPreys_ave], ...
            'SIROfDetectedPreys_std',             [BATSIntReport.SIROfDetectedPreys_std], ...
            'Range_est_err_ave',                  [BATSIntReport.Range_est_err_ave], ...
            'Range_est_err_std',                  [BATSIntReport.Range_est_err_std], ...
            'DF_est_err_ave',                     [BATSIntReport.DF_est_err_ave], ...
            'DF_est_err_std',                     [BATSIntReport.DF_est_err_std], ...
            'Range2_hunted_err_ave',              [BATSIntReport.Range2_hunted_err_ave], ...
            'Range2_hunted_err_std',              [BATSIntReport.Range2_hunted_err_std], ...
            'DF2_hunted_err_ave',                 [BATSIntReport.DF2_hunted_err_ave], ...
            'DF2_hunted_err_std',                 [BATSIntReport.DF2_hunted_err_std], ...
            'SIR2_hunted_ave',                    [BATSIntReport.SIR2_hunted_ave], ...
            'NumberOfPreyCluttered',              [BATSIntReport.TotalPreyCluttered], ...
            'ExitSuccess',                        [BATSIntReport.ExitSuccess], ...
            'ExitTimesSec',                       [BATSIntReport.ExitnTimes] * AllParams.SimParams.SampleTime , ...
            'CrushesObsTotal',                    [BATSIntReport.CrushesObsTotal], ...
            'CrushesConspsTotal',                 [BATSIntReport.CrushesConspsTotal], ...
            'TotalFilghtDistance',                [BATSIntReport.TotalFilghtDistance], ...
            'SuccessRateApproach',                [BATSIntReport.SuccessRateApproach], ...
            'SuccessRateBuzz',                    [BATSIntReport.SuccessRateBuzz], ...
            'dist2Consps_Min',                    [BATSIntReport.dist2Consps_MeanMin], ...
            'dist2Consps_STDMin',                 [BATSIntReport.dist2Consps_STDMin], ...
            'dist2Consps_Mean',                   [BATSIntReport.dist2Consps_MeanMean], ...
            'dist2Consps_STD',                    [BATSIntReport.dist2Consps_STDMean], ...
            'dist2Consps_Med',                    [BATSIntReport.dist2Consps_MeanMed], ...
            'dist2Consps_STDMed',                 [BATSIntReport.dist2Consps_STDMed], ...  
            'obsManueverFalseAlarm_ratio',        [BATSIntReport.obsManueverFalseAlarm_ratio], ... 
            'obsManueverFalseAlarm_total',        [BATSIntReport.obsManueverFalseAlarm_total] ... 
            );
% % %         'preyDetectProb',                     [BATSIntReport.preyDetectProb], ...
% % %         'preyTotalInBeam',                    [BATSIntReport.preyTotalInBeam], ...
% % %         'obsDetectProb',                      [BATSIntReport.obsDetectProb], ...
% % %         'obsTotalInBeam',                     [BATSIntReport.obsTotalInBeam], ...
% % %         'conspsDetectProb',                   [BATSIntReport.conspsDetectProb], ...
% % %         'conspsTotalInBeam',                  [BATSIntReport.conspsTotalInBeam] ...

        %%% Detection Prob
        detDistTest  = [1, 2, 3]; % meters
        obj= {'prey', 'obs', 'consps'};
        for jj= 1:numel(obj)
            for ii = 1:numel(detDistTest)
                fName1 = strcat(obj{jj}, 'DetectProb_', num2str(detDistTest(ii)),'m');
                FlightInterferceSummary.SummaryDataVectors.(fName1) = [BATSIntReport.(fName1)];
                fName2 = strcat(obj{jj}, 'TotalInBeam_', num2str(detDistTest(ii)),'m');
                FlightInterferceSummary.SummaryDataVectors.(fName2) = [BATSIntReport.(fName2)];    
            end % for ii = 1:numel(detDistTest)
        end % for obj

        %         if AllParams.SimParams.DetectObs

        FlightInterferceSummary.SummaryDataVectors.obsTotalNumberOfDetectionsWithoutInterference =  ...
            [BATSIntReport.obsTotalNumberOfDetectionsWithoutInterference];
        FlightInterferceSummary.SummaryDataVectors.obsTotalInterferenceRatio = [BATSIntReport.obsTotalInterferenceRatio];
        FlightInterferceSummary.SummaryDataVectors.obsTotalInterference      = [BATSIntReport.obsTotalInterference];
        FlightInterferceSummary.SummaryDataVectors.obsRange_est_err_ave      = [BATSIntReport.obsRange_est_err_ave];
        FlightInterferceSummary.SummaryDataVectors.obsRange_est_err_std      = [BATSIntReport.obsRange_est_err_std];
        FlightInterferceSummary.SummaryDataVectors.obsDF_est_err_ave         = [BATSIntReport.obsDF_est_err_ave];
        FlightInterferceSummary.SummaryDataVectors.obsDF_est_err_std         = [BATSIntReport.obsDF_est_err_std];
        FlightInterferceSummary.SummaryDataVectors.obsRxPowerOfDetected_ave  = [BATSIntReport.obsRxPowerOfDetected_ave];
        FlightInterferceSummary.SummaryDataVectors.obsRxPowerOfDetected_std  = [BATSIntReport.obsRxPowerOfDetected_std];

        %         end % if AllParams.SimParams.DetectObs

        %         if AllParams.SimParams.DetectConsps
        FlightInterferceSummary.SummaryDataVectors.conspsTotalNumberOfDetectionsWithoutInterference =  ...
            [BATSIntReport.conspsTotalNumberOfDetectionsWithoutInterference];
        FlightInterferceSummary.SummaryDataVectors.conspsTotalInterferenceRatio = [BATSIntReport.conspsTotalInterferenceRatio];
        FlightInterferceSummary.SummaryDataVectors.conspsTotalInterference      = [BATSIntReport.conspsTotalInterference];
        FlightInterferceSummary.SummaryDataVectors.conspsRange_est_err_ave      = [BATSIntReport.conspsRange_est_err_ave];
        FlightInterferceSummary.SummaryDataVectors.conspsRange_est_err_std      = [BATSIntReport.conspsRange_est_err_std];
        FlightInterferceSummary.SummaryDataVectors.conspsDF_est_err_ave         = [BATSIntReport.conspsDF_est_err_ave];
        FlightInterferceSummary.SummaryDataVectors.conspsDF_est_err_std         = [BATSIntReport.conspsDF_est_err_std];
        FlightInterferceSummary.SummaryDataVectors.conspsRxPowerOfDetected_ave  = [BATSIntReport.conspsRxPowerOfDetected_ave];
        FlightInterferceSummary.SummaryDataVectors.conspsRxPowerOfDetected_std  = [BATSIntReport.conspsRxPowerOfDetected_std];
        %         end % if AllParams.SimParams.DetectConsps

        %%%% June2022 - Add Stages total Pulses to Summary
        uStages =  BAT(1).InterReportStrctOnLine.SumStagesTable.Stage;
        for kBat = 1:numel(BAT)
            for kk = 1:numel(uStages)
                currStage = uStages{kk};
                currFN    = strcat('Total',currStage,'Pulses');
                currFN2   = strcat('Total',currStage,'Sequences');
                currData  = BAT(kBat).InterReportStrctOnLine.SumStagesTable.TotalPulses(kk);
                currData2 = BAT(kBat).InterReportStrctOnLine.SumStagesTable.TotalSequences(kk);
                if kBat == 1
                    FlightInterferceSummary.SummaryDataVectors.(currFN)  = currData;
                    FlightInterferceSummary.SummaryDataVectors.(currFN2) = currData2;
                else
                    FlightInterferceSummary.SummaryDataVectors.(currFN) = [ FlightInterferceSummary.SummaryDataVectors.(currFN), currData];
                    FlightInterferceSummary.SummaryDataVectors.(currFN2) = [ FlightInterferceSummary.SummaryDataVectors.(currFN2), currData2];
                end % if kk ==1
            end % for kk
        end % for kBat = 1:numel(BAT)

        %         rename Approach fiels
        if strcmp(AllParams.SimParams.TestMode, 'caveExit') && ~AllParams.SimParams.DetectPrey
            FlightInterferceSummary.SummaryDataVectors.TotalFollowWallSequences = FlightInterferceSummary.SummaryDataVectors.TotalApproachSequences;
            FlightInterferceSummary.SummaryDataVectors.TotalFollowWallPulses = FlightInterferceSummary.SummaryDataVectors.TotalApproachPulses;
            FlightInterferceSummary.SummaryDataVectors = rmfield(FlightInterferceSummary.SummaryDataVectors,'TotalApproachSequences');
            FlightInterferceSummary.SummaryDataVectors = rmfield(FlightInterferceSummary.SummaryDataVectors,'TotalApproachPulses');
        end


        FlightInterferceSummary.TotalNumOfCatches = sum( FlightInterferceSummary.SummaryDataVectors.NumberOfCatches);
        FlightInterferceSummary.TotalNumOfPreyDetections = sum( FlightInterferceSummary.SummaryDataVectors.NumberOfDetections);
        FlightInterferceSummary.TotaInterferfenceToDetections = sum( FlightInterferceSummary.SummaryDataVectors.NumberOfInterfernces);

        FlightInterferceSummary.TotalSearchAndApproachInterfernceRatio = ...
            FlightInterferceSummary.TotaInterferfenceToDetections ./  FlightInterferceSummary.TotalNumOfPreyDetections;

        FieldNamesForStatistics = { ...
            'NumberOfCatches', ...
            'NumberOfPulses',...
            'NumberOfDetections',...
            'NumberOfInterfernces',...
            'InterferenceToHuntedRatio',...
            'TotalInterferenceRatio', ...
            'Reference_PowerDetector_TotalRatio',...
            'Buzz_MaskingRatioToHunted', ...
            'Approach_MaskingRatioToHunted', ...
            'Search_MaskingRatioToHunted',...
            'MaskingLevelDB_ave',...
            'MaskingLevelDB_Q90', ...
            };

        FlightInterferceSummary.Statistics = CalculateMeanStdForStruct(FlightInterferceSummary.SummaryDataVectors, FieldNamesForStatistics);

        %%
end % switch AnalyzeTypeFlag




